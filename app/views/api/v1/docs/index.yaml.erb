swagger: "2.0"
info:
  version: 1.0.0
  title: NutritionAi
host: <%= request.host_with_port %>
basePath: /api/v1/
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
responses:
  200:
    description: Ok
  401:
    description: Unauthorized
  403:
    schema:
      type: object
      properties:
        message:
          type: string
          example: Forbidden
        code:
          type: string
          example: forbidden
  404:
    schema:
      type: object
      properties:
        message:
          type: string
          example: Not Found
        code:
          type: string
          example: not_found

paths:
  /user_token:
    post:
      tags:
        - Authentication
      parameters:
        - in: formData
          name: auth[email]
          required: true
          type: string
        - in: formData
          name: auth[password]
          required: true
          type: string
      responses:
        201:
          description: Success
          schema:
            type: object
            properties:
              jwt:
                type: string
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODAzMzYwMDcsInN1YiI6MX0.4PV3D3U3lGv8XLonFQcpMTxzM83VWtcelPkRwbR0qK0"
        404:
          description: Not Found
  /users:
    post:
      tags:
        - Users
      parameters:
        - in: body
          name: params
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  email:
                    type: string
                    example: example@example.com
                  password:
                    type: string
                    example: password
                  password_confirmation:
                    type: string
                    example: password
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
              profile:
                type: object
                properties:
                  sex:
                    type: string
                    example: male
                  calorie_spread_ratio:
                    type: float
                    example: 0.2
                  fat_ratio:
                    type: float
                    example: 0.2
                  protein_ratio:
                    type: float
                    example: 2.6
                  activity_level:
                    type: number
                    example: 2
      responses:
        200:
          $ref: '#/responses/200'
          schema:
            type: object
            $ref: '#/definitions/UserWithProfile'
        422:
          description: Validation Error
          schema:
            type: object
            properties:
              message:
                example: Validation Failed
              errors:
                example:
                  - resource: User
                    field: email
                    code: taken
                  - resource: User
                    field: email
                    code: blank
                  - resource: User
                    field: email
                    code: invalid
                  - resource: User
                    field: first_name
                    code: blank
                  - resource: User
                    field: last_name
                    code: blank
                  - resource: User
                    field: password
                    code: blank
                  - resource: User
                    field: password
                    code: too_short
                  - resource: User
                    field: password_confirmation
                    code: confirmation
                  - resource: User
                    field: sex
                    code: inclusion
                  - resource: User
                    field: calorie_spread_ratio
                    code: not_a_number
                  - resource: User
                    field: calorie_spread_ratio
                    code: too_low
                  - resource: User
                    field: calorie_spread_ratio
                    code: too_high
                  - resource: User
                    field: protein_ratio
                    code: not_a_number
                  - resource: User
                    field: protein_ratio
                    code: too_low
                  - resource: User
                    field: protein_ratio
                    code: too_high
                  - resource: User
                    field: fat_ratio
                    code: not_a_number
                  - resource: User
                    field: fat_ratio
                    code: too_low
                  - resource: User
                    field: fat_ratio
                    code: too_high
                  - resource: User
                    field: activity_level
                    code: not_an_integer
                  - resource: User
                    field: activity_level
                    code: not_a_number
                  - resource: User
                    field: activity_level
                    code: too_low
                  - resource: User
                    field: activity_level
                    code: too_big
  /users/{id}:
    get:
      tags:
        - Users
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          $ref: '#/responses/200'
          schema:
            $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
    put:
      tags:
        - Users
      security:
        - Bearer: []
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: params
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                  example: example@example.com
                password:
                  type: string
                  example: password
                password_confirmation:
                  type: string
                  example: password
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
      responses:
        200:
          $ref: '#/responses/200'
          schema:
            $ref: '#/definitions/User'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        422:
          description: Validation Error
          schema:
            type: object
            properties:
              message:
                example: Validation Failed
              errors:
                example:
                  - resource: User
                    field: email
                    code: taken
                  - resource: User
                    field: email
                    code: blank
                  - resource: User
                    field: email
                    code: invalid
                  - resource: User
                    field: first_name
                    code: blank
                  - resource: User
                    field: last_name
                    code: blank
                  - resource: User
                    field: password
                    code: blank
                  - resource: User
                    field: password
                    code: too_short
                  - resource: User
                    field: password_confirmation
                    code: confirmation
  /profiles/{id}:
    get:
      tags:
        - Profiles
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          $ref: '#/responses/200'
          schema:
            $ref: '#/definitions/Profile'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
    put:
      tags:
        - Profiles
      security:
        - Bearer: []
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: params
        schema:
          type: object
          properties:
            profile:
              type: object
              properties:
                sex:
                  type: string
                  example: male
                calorie_spread_ratio:
                  type: float
                  example: 0.2
                fat_ratio:
                  type: float
                  example: 0.2
                protein_ratio:
                  type: float
                  example: 2.6
                activity_level:
                  type: number
                  example: 2
      responses:
        200:
          $ref: '#/responses/200'
          schema:
            $ref: '#/definitions/Profile'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        422:
          description: Validation Error
          schema:
            type: object
            properties:
              message:
                example: Validation Failed
              errors:
                example:
                  - resource: Profile
                    field: sex
                    code: inclusion
                  - resource: Profile
                    field: calorie_spread_ratio
                    code: not_a_number
                  - resource: Profile
                    field: calorie_spread_ratio
                    code: too_low
                  - resource: Profile
                    field: calorie_spread_ratio
                    code: too_high
                  - resource: Profile
                    field: protein_ratio
                    code: not_a_number
                  - resource: Profile
                    field: protein_ratio
                    code: too_low
                  - resource: Profile
                    field: protein_ratio
                    code: too_high
                  - resource: Profile
                    field: fat_ratio
                    code: not_a_number
                  - resource: Profile
                    field: fat_ratio
                    code: too_low
                  - resource: Profile
                    field: fat_ratio
                    code: too_high
                  - resource: Profile
                    field: activity_level
                    code: not_an_integer
                  - resource: Profile
                    field: activity_level
                    code: not_a_number
                  - resource: Profile
                    field: activity_level
                    code: too_low
                  - resource: Profile
                    field: activity_level
                    code: too_big


definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        example: 1
      email:
        type: string
        example: info@example.com
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: Doe
  Profile:
    type: object
    properties:
      id:
        type: integer
        example: 1
      sex:
        type: string
        enum: [male, female]
      calorie_spread_ratio:
        type: float
        example: 0.2
      fat_ratio:
        type: float
        example: 0.2
      protein_ratio:
        type: float
        example: 2.6
      activity_level:
        type: number
        example: 2
  UserWithProfile:
    type: object
    $ref: '#/definitions/User'
    properties:
      profile:
        $ref: '#/definitions/Profile'
